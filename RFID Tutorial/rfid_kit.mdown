## SparkFun RFID Starter Kit Hookup Guide

[img-kit]

### Introduction

The [SparkFun RFID Starter Kit](https://www.sparkfun.com/products/13198) gives you the tools you need to start reading RFID tags with your computer or microcontroller! 

The kit contains:

* 1x [RFID USB Reader](http://www.sparkfun.com/products/9963)
* 1x [ID-12LA RFID Module](https://www.sparkfun.com/products/11827)
* 2x [125KHz RFID cards](https://www.sparkfun.com/products/8310)

You will also need a [USB mini-B cable](https://www.sparkfun.com/products/11301) to connect the USB reader to a computer.

### Recommended Reading

The ID-12LA module has a serial output. If you've never worked with a serial device or a terminal program before, you might want to take a look at these tutorials first.
* [Serial communication](https://learn.sparkfun.com/tutorials/serial-communication)  
* [Serial terminal basics](https://learn.sparkfun.com/tutorials/terminal-basics)
* [Tim's RFID Comparison video](https://www.youtube.com/watch?v=FLjV5BT9slg) 
Let Tim from Tech Support walk you through our entire line of RFID options, complete with range tests.
* [SparkFun Simple Sketches - RFID Starter Kit video](https://www.youtube.com/watch?v=aSqPt8UQOHM) A simple video demo of the RFID Starter Kit in action.

### But wait, what's RFID?
If you already know how RFID works (or would just like to continue believing the reader module contains a very small hamster with x-ray eyes), [skip ahead](jump to Simple Hookup) to the kit overview section.

[img-hamster]
Caption: How RFID doesn't work

**R**adio **F**requency **ID**entification uses radio waves to detect the presence of (then read the data stored on) an RFID tag. Tags are embedded in small items like cards, [buttons](https://www.sparkfun.com/products/9417), or [tiny capsules](https://www.sparkfun.com/products/9416).

[rfid-works]
Image courtesy of [EPC RFID](http://www.epc-rfid.info/rfid)

Passive tags (like the ones included with this kit) gather electromagnetic energy from the card reader and use that to transmit their unique serial number. More sophisticated tags may have their own internal power supply for increased range.

<table>
	<tr><th colspan="5">A Few Common RFID Reader Types</th></tr>
	<tr>
		<th>Frequency</th>
		<th>AKA</th>
		<th>Range</th>
		<th>Read/write</th>
		<th>SparkFun product</th>
	</tr>
	<tr>
		<td>120-150 kHz (LF)</td>
		<td>["Chips/microchips" (in veterinary applications)](http://en.wikipedia.org/wiki/Microchip_implant_(animal/)), prox cards, HID cards (both trade names)</td>
		<td>Up to 20 cm</td>
		<td>Read only</td>
		<td>[ID-3](https://www.sparkfun.com/products/11862), 
			[ID-12LA](https://www.sparkfun.com/products/11827), 
			[ID-20LA](https://www.sparkfun.com/products/11828), 
			[SparkFun RFID Starter Kit](https://www.sparkfun.com/products/13198)</td>
	</tr>
	<tr>
		<td>13.56 MHz (HF)</td>
		<td>MiFare, NFC</td>
		<td>Up to 1 meter</td>
		<td>Read/write</td>
		<td>[SM120 module](https://www.sparkfun.com/products/10126)
			and [evaluation shield](https://www.sparkfun.com/products/10406)</td>
	</tr>
	<tr>
		<td>433 MHz (UHF)</td>
		<td>Long-range RFID, powered RFID</td>
		<td>Up to 100 meters</td>
		<td>Read/write</td>
		<td>N/A</td>
	</tr>
	<tr><td colspan="5">Information from [Wikipedia: Radio-frequency identification](http://en.wikipedia.org/wiki/Radio-frequency_identification)</td></tr>
</table>

<div class="alert alert-info" role="alert">Some 125Khz RFID tags (like the ubiquitous "HID ProxCard II" brand ID card and some brands of pet tag) use a **proprietary format**. School IDs and other cards from commercial access control systems may not work with the ID-12LA module. <a href="http://www.identisource.net/format_and_facility_codes_expl.cfm" class="alert-link">IDentisource</a> has a guide to identifying cards.</div>

### RFID USB Reader Overview

The [RFID USB Reader](http://www.sparkfun.com/products/9963) has the following features:

[img-rfid annotated]

1. A buzzer that sounds when a card is read. If you are using the RFID kit in a stealth application, you can disconnect the buzzer by removing the blob of solder on the **Buzz** jumper.

2. A "card read" LED

3. 2mm-spaced sockets that fit three of SparkFun's RFID modules (the [ID-3](https://www.sparkfun.com/products/11862), the [ID-12LA](https://www.sparkfun.com/products/11827), and the[ID-20LA](https://www.sparkfun.com/products/11828))

4. A USB mini-B connector

5. An FTDI232RL USB-to-serial IC that converts the module's TTL serial output to USB

### Simple Hookup

Place the ID-12 module onto the USB base station and plug the base into your computer with a USB mini-B cable. Depending on your operating system, you may need to [install FTDI drivers](https://learn.sparkfun.com/tutorials/how-to-install-ftdi-drivers) after plugging the base station in.

[img-devmgr]
Caption: Here's the RFID reader (on COM4) with the FTDI drivers installed.

Open a terminal program of your choice. If you've never used a terminal program before, [here's a guide to choosing and using them](https://learn.sparkfun.com/tutorials/terminal-basics)

First, use the Arduino IDE's built-in serial monitor:

Open the Arduino IDE.  
Go to **Tools > Port** and select the RFID reader's port.  
Go to **Tools > Serial Monitor**. The default terminal settings (9600 baud, no line ending) are fine. The monitor should be blank.

Wave a card over the reader. You should hear a beep and see something like this.

[img-read card]

Now, we'll do the same thing in RealTerm. (Mac users, you can try this section using [CoolTerm](https://learn.sparkfun.com/tutorials/terminal-basics/coolterm-windows-mac-linux)) 

RealTerm may look like the cockpit of a 747 compared to the Arduino serial monitor, but it has several helpful features. [Keep the RealTerm tutorial open if you need it.](https://learn.sparkfun.com/tutorials/terminal-basics/real-term-windows)

[img-realterm-portsetting]
Caption: The RealTerm **Port** tab with the port set to `4` and the baud rate to `9600`

[img-realterm_hex]
Caption: The RealTerm **Display** tab

With **Display As** set to `Hex[space]`, the card data appears as 16 hex bytes instead of 12 ASCII digits like it did in the Arduino Serial Monitor.

Wait, 16 bytes? Where did the extra four come from?

[img-dataformat]
Here's the "Data format" section from the ID-12 module datasheet. The 12 ASCII characters displayed in the Arduino serial monitor are just the filling in a 16-byte sandwich, with four more non-printing characters (STX or start-of-text, CR/carriage return, LF/linefeed, and ETX/end-of-text) as the bread.

Try switching the **Display As** setting to `ASCII` and scan again:
[img-realterm_ascii]

Now the "bread" is visible! That's cool, right?

### Going Further
* [bildr.org Using an RFID Reader with Arduino](http://bildr.org/2011/02/rfid-arduino/) Incorporate your RFID kit into an Arduino project.
* [Rob's NCWP (Non-Crappy Wedding Present) Tutorial](https://www.sparkfun.com/tutorials/204) An RFID reader (plus the rest of Rob's parts list) could be all that's separating you from true love.